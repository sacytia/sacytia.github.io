{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Sacytia Modular Autonomous Robot Software Framework Overview Sacytia accelerates the development of autonomous robotic systems of various kinds by providing modularised software packages built on top of the Robot Operating System in order to realise a production ready robotic solution. The packages provided include algorithms for robotic perception, control and navigation. Moreover, these packages also include machine learning based algorithms for learning robotic control. Apart from the robot centric development packages, Sacytia also enables development of a Robot-as-a-Service (RaaS) model based platform by providing custom communication protocols to its users. The architecture of the Sacytia Robot Software Framework is as shown: Applications Inspection The autonomous robots developed using Sacytia can be used in inspection sites such as for nuclear power plants , mining , oil rigs , and solar and wind plants . An example of such a robot can be found here: Inspection robot for the oil/gas storage . Logistics Replacing the traditional automated guided vehicles (AGVs) , Sacytia accelerates the development of the autonomous wheeled mobile robots (AWMRs) which further guarantee more efficient and robust performance for logistic operations. A good example can be found here: Inside Alibaba's smart warehouse staffed by robots . Agriculture The computer vision tools shipped with Sacytia can be used to develop robots for precision farming . Moreover, modifications in the framework could allow development of robots which could potentially be used for spraying of pesticides and fertilisers. Such a robot is demonstrated here: DJI MG-1S - Agricultural Wonder Drone . Filming Autonomous robots built with Sacytia can be used for the purposes of filming. Several companies have explored this space in both aerial and ground domains. Motion Impossible is one such company, and a demonstration of one of their robots can be found here: Motion Impossible BuggyCam Showreel . Research Sacytia's software packages can very well be used for academic and industrial research. The software packages can be used to build a custom robot for testing several developed algorithms or for being flashed on an already built robot. Sacytia aims to give its users the ability to rapidly prototype their designs and test its performance. Example of such a robot is as shown here: Jackal UGV Research Robot . Components Sacytia ships with several modules (or packages), most of which function independently. However, few modules may have dependencies on other modules and will need these in order to work properly. Some of the core modules shipped with Sacytia are listed here. It is important to note that some of these modules may need to be re-engineered in order to be used with user-specific platforms. Perception The perception_core module handles how the robot perceives the environment around itself. Using sensors such as RGBD cameras and LiDARs, this module, along with its dependencies, generates a 3D map of the environment of operation. It extends upon the OctoMap library, and has been tested for operation with the Intel RealSense D435 RGBD camera and the Velodyne LiDAR. Control The control modules are robot-platform dependent. For example, the control methods for legged robots are different than for wheeled robots. Though most of the recent research implements use of optimal control based framework for robotic control, which can be used for different kinds of robots, Sacytia also provides an interface to generate custom control policies for user-specified robot platform using machine learning based techniques. Currently, Sacytia supports control methods for Autonomous Wheeled Mobile Robots , Legged Robots and Aerial Vehicles . State Estimation For a robotic system to function, it is extremely important for it to know its precise location and state in the environment of operation. For a wheeled mobile robot, for example, its state would be its position and orientation in the given environment. The state_estimation modules Sacytia provides employs probabilistic state estimation methods fusing sensor data from both inertial measurement units and visual sensors. Moreover, the motor encoders are further used to estimate the motor velocities and floor friction. Command Interface Though autonomous, robotic systems need to be given high-level commands. For example, in an inspection site, an Autonomous Mobile Robot may, at least once, be needed to be given locations of the areas within the sites to be inspected. In order to provide such instructions to the robot, the developer may need to design a command interface that is user-friendly. To make this task easier, Sacytia provides platform-dependent apps to communicate with the robotic system. The development platforms include Ubuntu and Android . Hardware Drivers The hardware components of a robotic system vary from one manufacturer to another. Sacytia, upon request, is shipped with hardware drivers to support the user's custom hardware protocols to easily interface with sacytia_core and dependent packages. Computer Vision In addition to perception modules, Sacytia includes some computer vision based algorithms for tasks such as person detection and tracking (to implement person following robotic control) , and object detection and classification . These do not require sacytia_core as a dependency, and hence, can be used with other software frameworks.","title":"Home"},{"location":"#overview","text":"Sacytia accelerates the development of autonomous robotic systems of various kinds by providing modularised software packages built on top of the Robot Operating System in order to realise a production ready robotic solution. The packages provided include algorithms for robotic perception, control and navigation. Moreover, these packages also include machine learning based algorithms for learning robotic control. Apart from the robot centric development packages, Sacytia also enables development of a Robot-as-a-Service (RaaS) model based platform by providing custom communication protocols to its users. The architecture of the Sacytia Robot Software Framework is as shown:","title":"Overview"},{"location":"#applications","text":"","title":"Applications"},{"location":"#components","text":"Sacytia ships with several modules (or packages), most of which function independently. However, few modules may have dependencies on other modules and will need these in order to work properly. Some of the core modules shipped with Sacytia are listed here. It is important to note that some of these modules may need to be re-engineered in order to be used with user-specific platforms.","title":"Components"},{"location":"usage/","text":"License The modules included with Sacytia can be licensed to its users. The license agreements shall depend on the use cases and will be provided upon interactions with the users. Joint Ventures Alternatively, a collaborative venture can be formed between the developers of Sacytia and other robotic hardware manufacturers. These collaborations can be discussed further with the potential partners.","title":"Usage"},{"location":"usage/#license","text":"The modules included with Sacytia can be licensed to its users. The license agreements shall depend on the use cases and will be provided upon interactions with the users.","title":"License"},{"location":"usage/#joint-ventures","text":"Alternatively, a collaborative venture can be formed between the developers of Sacytia and other robotic hardware manufacturers. These collaborations can be discussed further with the potential partners.","title":"Joint Ventures"}]}