{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Sacytia Modular Autonomous Robot Software Framework Overview Sacytia accelerates the development of autonomous robotic systems of various kinds by providing modularised software packages built on top of the Robot Operating System in order to realise a production ready robotic solution. The packages provided include algorithms for robotic perception, control and navigation. Moreover, these packages also include machine learning based algorithms for learning robotic control. Apart from the robot centric development packages, Sacytia also enables development of a Robot-as-a-Service (RaaS) model based platform by providing custom communication protocols to its users. The architecture of the Sacytia Robot Software Framework is as shown: Components Sacytia ships with several modules (or packages), most of which function independently. However, few modules may have dependencies on other modules and will need these in order to work properly. Some of the core modules shipped with Sacytia are listed here. It is important to note that some of these modules may need to be re-engineered in order to be used with user-specific platforms. Perception The perception_core module handles how the robot perceives the environment around itself. Using sensors such as RGBD cameras and LiDARs, this module, along with its dependencies, generates a 3D map of the environment of operation. It extends upon the OctoMap library, and has been tested for operation with the Intel RealSense D435 RGBD camera and the Velodyne LiDAR. Control The control modules are robot-platform dependent. For example, the control methods for legged robots are different than for wheeled robots. Though most of the recent research implements use of optimal control based framework for robotic control, which can be used for different kinds of robots, Sacytia also provides an interface to generate custom control policies for user-specified robot platform using machine learning based techniques. Currently, Sacytia supports control methods for Autonomous Wheeled Mobile Robots , Legged Robots and Aerial Vehicles . State Estimation For a robotic system to function, it is extremely important for it to know its precise location and state in the environment of operation. For a wheeled mobile robot, for example, its state would be its position and orientation in the given environment. The state_estimation modules Sacytia provides employs probabilistic state estimation methods fusing sensor data from both inertial measurement units and visual sensors. Moreover, the motor encoders are further used to estimate the motor velocities and floor friction. Command Interface Though autonomous, robotic systems need to be given high-level commands. For example, in an inspection site, an Autonomous Mobile Robot may, at least once, be needed to be given locations of the areas within the sites to be inspected. In order to provide such instructions to the robot, the developer may need to design a command interface that is user-friendly. To make this task easier, Sacytia provides platform-dependent apps to communicate with the robotic system. The develpoment platforms include Ubuntu and Android .","title":"Home"},{"location":"#overview","text":"Sacytia accelerates the development of autonomous robotic systems of various kinds by providing modularised software packages built on top of the Robot Operating System in order to realise a production ready robotic solution. The packages provided include algorithms for robotic perception, control and navigation. Moreover, these packages also include machine learning based algorithms for learning robotic control. Apart from the robot centric development packages, Sacytia also enables development of a Robot-as-a-Service (RaaS) model based platform by providing custom communication protocols to its users. The architecture of the Sacytia Robot Software Framework is as shown:","title":"Overview"},{"location":"#components","text":"Sacytia ships with several modules (or packages), most of which function independently. However, few modules may have dependencies on other modules and will need these in order to work properly. Some of the core modules shipped with Sacytia are listed here. It is important to note that some of these modules may need to be re-engineered in order to be used with user-specific platforms.","title":"Components"},{"location":"about/","text":"For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"About"},{"location":"about/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"about/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"}]}